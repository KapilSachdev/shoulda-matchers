name: Test

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432

    strategy:
      fail-fast: false
      matrix:
        ruby: [2.7]
        db: [sqlite3, postgresql]
        gemfile: [gemfiles/rails_6_0.gemfile]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}

    - name: Cache gems
      uses: actions/cache@v1
      with:
        path: '../vendor/bundle'
        key: ${{ runner.os }}-${{ matrix.ruby }}--gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
      env:
        DATABASE_ADAPTER: ${{ matrix.db }}
        BUNDLE_GEMFILE: "${{ matrix.gemfile }}"
        BUNDLE_PATH: '../vendor/bundle'

    - name: Install gems
      env:
        DATABASE_ADAPTER: ${{ matrix.db }}
        BUNDLE_GEMFILE: "${{ matrix.gemfile }}"
        BUNDLE_PATH: '../vendor/bundle'
      run: |
        bundle config path ../vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Setup postgres
      if: matrix.db == 'postgresql'
      run: |
        sudo apt-get install -y postgresql-client libpq-dev
        PGPASSWORD=postgres psql -c 'create database test;' -U postgres -p 5432 -h localhost

    - name: Run Test
      env:
        DATABASE_ADAPTER: ${{ matrix.db }}
        BUNDLE_GEMFILE: "${{ matrix.gemfile }}"
        BUNDLE_PATH: '../vendor/bundle'
        POSTGRES_PASSWORD: postgres
        POSTGRES_USER: postgres
        RAILS_ENV: test
      run: bundle exec rake
